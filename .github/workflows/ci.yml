# name: Run Backend Tests

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: 📥 Checkout repository
#         uses: actions/checkout@v3

#       - name: 🟨 Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 20

#       - name: 📦 Install dependencies
#         run: npm install
#         working-directory: ./backend

#       - name: 🧪 Run tests
#         run: npm test -- users/
#         working-directory: ./backend
name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend-tests:
    name: 🔍 Backend Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: trackpro
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🟨 Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install dependencies
        working-directory: ./backend
        run: npm install

      - name: ⚙️ Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for postgres..."
            sleep 2
          done

      - name: 🧪 Run Unit & Functional Tests
        working-directory: ./backend
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/trackpro
        run: npm run test -- users/

  docker-build:
    name: 🐳 Build Docker Images
    runs-on: ubuntu-latest
    needs: backend-tests

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🧱 Build all services (backend, frontend, db)
        run: docker compose build
