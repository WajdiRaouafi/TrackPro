# name: CI/CD Docker Compose - TrackPro

# on:
#   push:
#     branches: [main]

# jobs:
#   test-build-push:
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres:15
#         env:
#           POSTGRES_DB: trackpro
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: password
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     env:
#       DATABASE_URL: postgres://postgres:password@localhost:5432/trackpro

#     steps:
#       - name: 📥 Checkout repository
#         uses: actions/checkout@v4

#       - name: ⚙️ Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 20

#       - name: 📦 Install backend dependencies
#         run: |
#           cd backend
#           npm ci

#       - name: 🧪 Run backend tests
#         run: |
#           cd backend
#           npm run test -- users/

#       - name: 🐳 Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: 🏗️ Build backend image
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/trackpro-backend:latest ./backend

#       - name: 🏗️ Build frontend image
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/trackpro-frontend:latest ./frontend

#       - name: 🚀 Push backend image
#         run: |
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/trackpro-backend:latest

#       - name: 🚀 Push frontend image
#         run: |
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/trackpro-frontend:latest

name: CI/CD - TrackPro (multi-jobs)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_BACKEND: ${{ secrets.DOCKERHUB_USERNAME }}/trackpro-backend
  IMAGE_FRONTEND: ${{ secrets.DOCKERHUB_USERNAME }}/trackpro-frontend
  VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL || 'http://localhost:3000' }}

jobs:
  backend_test:
    name: Backend • Lint/Build/Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: trackpro
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d trackpro"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10
    env:
      DATABASE_URL: postgres://postgres:password@localhost:5432/trackpro
      NODE_ENV: test
      JWT_SECRET: testsecret
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/package-lock.json

      - name: 📦 Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: ⏳ Wait for Postgres
        run: |
          for i in {1..40}; do
            if PGPASSWORD=password psql -h localhost -U postgres -d trackpro -c "select 1" >/dev/null 2>&1; then
              echo "Postgres is up ✅"; break
            fi
            echo "Waiting for Postgres... ($i/40)"; sleep 2
          done

      - name: 📦 Install deps
        working-directory: backend
        run: npm ci --no-audit --no-fund

      - name: 🧹 Lint (if present)
        working-directory: backend
        run: npm run lint --if-present

      - name: 🏗️ Build (if present)
        working-directory: backend
        run: npm run build --if-present

      - name: 🗃️ Migrations (if present)
        working-directory: backend
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: npm run migration:run --if-present

      # - name: 🧪 Tests
      #   working-directory: backend
      #   env:
      #     DATABASE_URL: ${{ env.DATABASE_URL }}
      #     JWT_SECRET: ${{ env.JWT_SECRET }}
      #   run: npm test -- --ci --passWithNoTests

  frontend_check:
    name: Frontend • Lint/Typecheck/Build
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install deps
        working-directory: frontend
        run: npm ci --no-audit --no-fund

      - name: 🧹 Lint (if present)
        working-directory: frontend
        run: npm run lint --if-present

      - name: 🔎 Typecheck / Build (if present)
        working-directory: frontend
        env:
          VITE_BACKEND_URL: ${{ env.VITE_BACKEND_URL }}
        run: |
          npm run typecheck --if-present
          npm run build --if-present

  docker_backend:
    name: Docker • Build/Push Backend
    runs-on: ubuntu-latest
    needs: backend_test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏷️ Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_BACKEND }}
          tags: |
            type=raw,value=latest
            type=sha,format=short
            type=ref,event=tag
          labels: |
            org.opencontainers.image.title=trackpro-backend
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: 🐳 Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production

  docker_frontend:
    name: Docker • Build/Push Frontend
    runs-on: ubuntu-latest
    needs: frontend_check
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏷️ Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_FRONTEND }}
          tags: |
            type=raw,value=latest
            type=sha,format=short
            type=ref,event=tag
          labels: |
            org.opencontainers.image.title=trackpro-frontend
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: 🐳 Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VITE_BACKEND_URL=${{ env.VITE_BACKEND_URL }}
